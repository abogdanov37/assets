buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.0.RELEASE")
        classpath 'com.h2database:h2:1.4.197'

        classpath 'com.sun.xml.bind:jaxb-core:2.3.0.1'
        classpath 'com.sun.xml.bind:jaxb-impl:2.3.0.1'
        classpath 'javax.activation:activation:1.1.1'
        classpath 'javax.xml.bind:jaxb-api:2.3.0'
    }
}

plugins {
    id 'nu.studer.jooq' version '3.0.2'
    id "org.flywaydb.flyway" version "5.2.1"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'

group 'Assets'
version '1.0'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

sourceCompatibility = 1.10

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-jooq'
    compile 'org.springframework.boot:spring-boot-starter-log4j2'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.jooq:jooq'

    compile 'org.springframework.security.oauth:spring-security-oauth2:2.3.4.RELEASE'

    runtime 'org.springframework.boot:spring-boot-devtools'
    runtime 'com.h2database:h2:1.4.197'

    runtime 'javax.activation:activation:1.1.1'
    runtime 'javax.xml.bind:jaxb-api:2.3.0'
    runtime 'com.sun.xml.bind:jaxb-core:2.3.0.1'
    runtime 'com.sun.xml.bind:jaxb-impl:2.3.0.1'
    
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testCompile 'org.junit.vintage:junit-vintage-engine:5.3.1'
    testCompile 'org.assertj:assertj-core:3.11.1'
    testCompile 'org.flywaydb:flyway-core:5.2.1'

    jooqRuntime 'com.h2database:h2:1.4.197'
    jooqRuntime 'javax.activation:activation:1.1.1'
    jooqRuntime 'javax.xml.bind:jaxb-api:2.3.0'
    jooqRuntime 'com.sun.xml.bind:jaxb-core:2.3.0.1'
    jooqRuntime 'com.sun.xml.bind:jaxb-impl:2.3.0.1'
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

flyway {
    url = 'jdbc:h2:~/test'
    user = 'asset'
    password = 'asset'
    schemas = ['asset']
    locations = ["filesystem:$project.projectDir/src/main/resources/db/migration"]
}

jooq {
    version = '3.11.2'
    edition = 'OSS'
    assets(sourceSets.main) {
        jdbc {
            driver = 'org.h2.Driver'
            url = 'jdbc:h2:~/test'
            user = 'asset'
            password = 'asset'
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.meta.h2.H2Database'
                inputSchema = 'asset'
                forcedTypes {
                }
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
            }
            target {
                packageName = 'com.assets.model'
            }
        }
    }
}

ext['jooq.version'] = '3.11.2'

task run(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.assets.Assets'
}

generateAssetsJooqSchemaSource.dependsOn flywayMigrate